// Generated with RobotBuilder version 0.0.1

package org.usfirst.frc694.DESdroid;
    
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.RobotDrive.MotorType;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import java.util.Vector;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // The following variables are automatically assigned by
    // robotbuilder and will be updated the next time you export to
    // Java from robot builder. Do not put any code or make any change
    // in the following block or it will be lost on an update. To
    // prevent this subsystem from being automatically updated, delete
    // the following line.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Victor DRIVETRAIN_FRONTLEFTMOTOR;
    public static Victor DRIVETRAIN_REARLEFTMOTOR;
    public static Victor DRIVETRAIN_FRONTRIGHTMOTOR;
    public static Victor DRIVETRAIN_REARRIGHTMOTOR;
    public static RobotDrive DRIVETRAIN_DRIVETRAIN;
    public static Victor ARM_ARMMOTOR;
    public static Victor GRABBER_UPPERROLLER;
    public static Victor GRABBER_LOWERROLLER;
    public static DigitalInput GRABBER_LIMIT_SWITCH;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // The following variables are automatically assigned by
        // robotbuilder and will be updated the next time you export to
        // Java from robot builder. Do not put any code or make any change
        // in the following block or it will be lost on an update. To
        // prevent this subsystem from being automatically updated, delete
        // the following line.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        DRIVETRAIN_FRONTLEFTMOTOR = new Victor(1, 6);
	LiveWindow.addActuator("Drivetrain", "frontLeftMotor", DRIVETRAIN_FRONTLEFTMOTOR);
        
        DRIVETRAIN_REARLEFTMOTOR = new Victor(1, 8);
	LiveWindow.addActuator("Drivetrain", "rearLeftMotor", DRIVETRAIN_REARLEFTMOTOR);
        
        DRIVETRAIN_FRONTRIGHTMOTOR = new Victor(1, 9);
	LiveWindow.addActuator("Drivetrain", "frontRightMotor", DRIVETRAIN_FRONTRIGHTMOTOR);
        
        DRIVETRAIN_REARRIGHTMOTOR = new Victor(1, 10);
	LiveWindow.addActuator("Drivetrain", "rearRightMotor", DRIVETRAIN_REARRIGHTMOTOR);
        
        DRIVETRAIN_DRIVETRAIN = new RobotDrive(DRIVETRAIN_FRONTLEFTMOTOR, DRIVETRAIN_REARLEFTMOTOR,
              DRIVETRAIN_FRONTRIGHTMOTOR, DRIVETRAIN_REARRIGHTMOTOR);
	
        DRIVETRAIN_DRIVETRAIN.setSafetyEnabled(true);
        DRIVETRAIN_DRIVETRAIN.setExpiration(0.1);
        DRIVETRAIN_DRIVETRAIN.setSensitivity(0.5);
        DRIVETRAIN_DRIVETRAIN.setMaxOutput(1.0);

        ARM_ARMMOTOR = new Victor(1, 3);
	LiveWindow.addActuator("Arm", "armMotor", ARM_ARMMOTOR);
        
        GRABBER_UPPERROLLER = new Victor(1, 4);
	LiveWindow.addActuator("Grabber", "upperRoller", GRABBER_UPPERROLLER);
        
        GRABBER_LOWERROLLER = new Victor(1, 1);
	LiveWindow.addActuator("Grabber", "lowerRoller", GRABBER_LOWERROLLER);
        
        GRABBER_LIMIT_SWITCH = new DigitalInput(1, 10);
	LiveWindow.addSensor("Grabber", "Limit Switch", GRABBER_LIMIT_SWITCH);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
